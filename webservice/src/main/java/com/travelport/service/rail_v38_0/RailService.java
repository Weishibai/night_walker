package com.travelport.service.rail_v38_0;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.5
 * 2016-09-13T11:33:15.046-06:00
 * Generated source version: 3.1.5
 * 
 */
@WebServiceClient(name = "RailService", 
                  wsdlLocation = "file:/C:/Travelport_1/SamplesAutoMation/AutoWork/travelport-uapi-tutorial-v38/wsdl/rail_v38_0/Rail.wsdl",
                  targetNamespace = "http://www.travelport.com/service/rail_v38_0") 
public class RailService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.travelport.com/service/rail_v38_0", "RailService");
    public final static QName RailExchangeCreateReservationPort = new QName("http://www.travelport.com/service/rail_v38_0", "RailExchangeCreateReservationPort");
    public final static QName RailSeatMapPort = new QName("http://www.travelport.com/service/rail_v38_0", "RailSeatMapPort");
    public final static QName RailExchangeQuotePort = new QName("http://www.travelport.com/service/rail_v38_0", "RailExchangeQuotePort");
    public final static QName RailRefundQuotePort = new QName("http://www.travelport.com/service/rail_v38_0", "RailRefundQuotePort");
    public final static QName RailRefundPort = new QName("http://www.travelport.com/service/rail_v38_0", "RailRefundPort");
    public final static QName RailAvailabilitySearchPort = new QName("http://www.travelport.com/service/rail_v38_0", "RailAvailabilitySearchPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Travelport_1/SamplesAutoMation/AutoWork/travelport-uapi-tutorial-v38/wsdl/rail_v38_0/Rail.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RailService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Travelport_1/SamplesAutoMation/AutoWork/travelport-uapi-tutorial-v38/wsdl/rail_v38_0/Rail.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RailService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RailService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RailService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public RailService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RailService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RailService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns RailExchangeCreateReservationPortType
     */
    @WebEndpoint(name = "RailExchangeCreateReservationPort")
    public RailExchangeCreateReservationPortType getRailExchangeCreateReservationPort() {
        return super.getPort(RailExchangeCreateReservationPort, RailExchangeCreateReservationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailExchangeCreateReservationPortType
     */
    @WebEndpoint(name = "RailExchangeCreateReservationPort")
    public RailExchangeCreateReservationPortType getRailExchangeCreateReservationPort(WebServiceFeature... features) {
        return super.getPort(RailExchangeCreateReservationPort, RailExchangeCreateReservationPortType.class, features);
    }


    /**
     *
     * @return
     *     returns RailSeatMapPortType
     */
    @WebEndpoint(name = "RailSeatMapPort")
    public RailSeatMapPortType getRailSeatMapPort() {
        return super.getPort(RailSeatMapPort, RailSeatMapPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailSeatMapPortType
     */
    @WebEndpoint(name = "RailSeatMapPort")
    public RailSeatMapPortType getRailSeatMapPort(WebServiceFeature... features) {
        return super.getPort(RailSeatMapPort, RailSeatMapPortType.class, features);
    }


    /**
     *
     * @return
     *     returns RailExchangeQuotePortType
     */
    @WebEndpoint(name = "RailExchangeQuotePort")
    public RailExchangeQuotePortType getRailExchangeQuotePort() {
        return super.getPort(RailExchangeQuotePort, RailExchangeQuotePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailExchangeQuotePortType
     */
    @WebEndpoint(name = "RailExchangeQuotePort")
    public RailExchangeQuotePortType getRailExchangeQuotePort(WebServiceFeature... features) {
        return super.getPort(RailExchangeQuotePort, RailExchangeQuotePortType.class, features);
    }


    /**
     *
     * @return
     *     returns RailRefundQuotePortType
     */
    @WebEndpoint(name = "RailRefundQuotePort")
    public RailRefundQuotePortType getRailRefundQuotePort() {
        return super.getPort(RailRefundQuotePort, RailRefundQuotePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailRefundQuotePortType
     */
    @WebEndpoint(name = "RailRefundQuotePort")
    public RailRefundQuotePortType getRailRefundQuotePort(WebServiceFeature... features) {
        return super.getPort(RailRefundQuotePort, RailRefundQuotePortType.class, features);
    }


    /**
     *
     * @return
     *     returns RailRefundPortType
     */
    @WebEndpoint(name = "RailRefundPort")
    public RailRefundPortType getRailRefundPort() {
        return super.getPort(RailRefundPort, RailRefundPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailRefundPortType
     */
    @WebEndpoint(name = "RailRefundPort")
    public RailRefundPortType getRailRefundPort(WebServiceFeature... features) {
        return super.getPort(RailRefundPort, RailRefundPortType.class, features);
    }


    /**
     *
     * @return
     *     returns RailAvailabilitySearchPortType
     */
    @WebEndpoint(name = "RailAvailabilitySearchPort")
    public RailAvailabilitySearchPortType getRailAvailabilitySearchPort() {
        return super.getPort(RailAvailabilitySearchPort, RailAvailabilitySearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RailAvailabilitySearchPortType
     */
    @WebEndpoint(name = "RailAvailabilitySearchPort")
    public RailAvailabilitySearchPortType getRailAvailabilitySearchPort(WebServiceFeature... features) {
        return super.getPort(RailAvailabilitySearchPort, RailAvailabilitySearchPortType.class, features);
    }

}
